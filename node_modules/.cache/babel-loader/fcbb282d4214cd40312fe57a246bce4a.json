{"ast":null,"code":"var _jsxFileName = \"/home/viktoriia/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438/GitHub/goit-react-hw-02-phonebook/src/components/App.jsx\";\nimport { nanoid } from 'nanoid';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport css from './App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  Component\n} = require('react');\n\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      filter: ''\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        number,\n        name\n      } = this.state;\n      const repeatName = this.state.contacts.find(item => {\n        return item.name === name;\n      });\n\n      if (repeatName) {\n        alert(`${name} is already in your contacts!`);\n        this.reset();\n        return;\n      } else {\n        const newContact = {\n          id: nanoid(),\n          name,\n          number\n        };\n        this.setState(() => {\n          return {\n            contacts: [...this.state.contacts, newContact]\n          };\n        });\n      }\n\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n\n    this.onBtnDelete = e => {\n      this.setState(prevState => {\n        return {\n          contacts: prevState.contacts.filter(contact => contact.id !== e.target.id)\n        };\n      });\n    };\n\n    this.handleFilter = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        filter: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      contacts\n    } = this.state;\n    const filterContact = contacts.filter(contact => contact.name.toLowerCase().trim().includes(this.state.filter.toLowerCase()));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        action: \"\",\n        className: css.phonebook,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: css.phonebookTitle,\n          children: \"Phonebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n          onChange: this.handleChange,\n          valueNumber: this.state.number,\n          value: this.state.name || '',\n          onSubmit: this.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: css.contactTitle,\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {\n          onChange: this.handleFilter,\n          value: this.state.filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n          contacts: filterContact,\n          onBtnDelete: this.onBtnDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/viktoriia/Документи/GitHub/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["nanoid","ContactList","Filter","ContactForm","css","Component","require","App","state","contacts","filter","handleChange","e","name","value","target","setState","handleSubmit","preventDefault","number","repeatName","find","item","alert","reset","newContact","id","onBtnDelete","prevState","contact","handleFilter","render","filterContact","toLowerCase","trim","includes","phonebook","phonebookTitle","contactTitle"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAgBC,OAAO,CAAC,OAAD,CAA7B;;AAEA,OAAO,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCG,KADiC,GACzB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,MAAM,EAAE;AAFF,KADyB;;AAAA,SAMjCC,YANiC,GAMlBC,CAAC,IAAI;AAClB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,CAAC,CAACG,MAA1B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACH,IAAD,GAAQC;AAAV,OAAd;AACD,KATgC;;AAAA,SAWjCG,YAXiC,GAWlBL,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACM,cAAF;AACA,YAAM;AAAEC,QAAAA,MAAF;AAAUN,QAAAA;AAAV,UAAmB,KAAKL,KAA9B;AACA,YAAMY,UAAU,GAAG,KAAKZ,KAAL,CAAWC,QAAX,CAAoBY,IAApB,CAAyBC,IAAI,IAAI;AAClD,eAAOA,IAAI,CAACT,IAAL,KAAcA,IAArB;AACD,OAFkB,CAAnB;;AAGA,UAAIO,UAAJ,EAAgB;AACdG,QAAAA,KAAK,CAAE,GAAEV,IAAK,+BAAT,CAAL;AACA,aAAKW,KAAL;AACA;AACD,OAJD,MAIO;AACL,cAAMC,UAAU,GAAG;AAAEC,UAAAA,EAAE,EAAE1B,MAAM,EAAZ;AAAgBa,UAAAA,IAAhB;AAAsBM,UAAAA;AAAtB,SAAnB;AACA,aAAKH,QAAL,CAAc,MAAM;AAClB,iBAAO;AAAEP,YAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,EAAyBgB,UAAzB;AAAZ,WAAP;AACD,SAFD;AAGD;;AACD,WAAKD,KAAL;AACD,KA5BgC;;AAAA,SA8BjCA,KA9BiC,GA8BzB,MAAM;AACZ,WAAKR,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYM,QAAAA,MAAM,EAAE;AAApB,OAAd;AACD,KAhCgC;;AAAA,SAkCjCQ,WAlCiC,GAkCnBf,CAAC,IAAI;AACjB,WAAKI,QAAL,CAAcY,SAAS,IAAI;AACzB,eAAO;AACLnB,UAAAA,QAAQ,EAAEmB,SAAS,CAACnB,QAAV,CAAmBC,MAAnB,CACRmB,OAAO,IAAIA,OAAO,CAACH,EAAR,KAAed,CAAC,CAACG,MAAF,CAASW,EAD3B;AADL,SAAP;AAKD,OAND;AAOD,KA1CgC;;AAAA,SA4CjCI,YA5CiC,GA4ClBlB,CAAC,IAAI;AAClB,YAAM;AAAEE,QAAAA;AAAF,UAAYF,CAAC,CAACG,MAApB;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAAEI;AAAV,OAAd;AACD,KA/CgC;AAAA;;AAiDjCiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtB,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,UAAMwB,aAAa,GAAGvB,QAAQ,CAACC,MAAT,CAAgBmB,OAAO,IAC3CA,OAAO,CAAChB,IAAR,CACGoB,WADH,GAEGC,IAFH,GAGGC,QAHH,CAGY,KAAK3B,KAAL,CAAWE,MAAX,CAAkBuB,WAAlB,EAHZ,CADoB,CAAtB;AAOA,wBACE;AAAA,8BACE;AAAK,QAAA,MAAM,EAAC,EAAZ;AAAe,QAAA,SAAS,EAAE7B,GAAG,CAACgC,SAA9B;AAAA,gCACE;AAAI,UAAA,SAAS,EAAEhC,GAAG,CAACiC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AACE,UAAA,QAAQ,EAAE,KAAK1B,YADjB;AAEE,UAAA,WAAW,EAAE,KAAKH,KAAL,CAAWW,MAF1B;AAGE,UAAA,KAAK,EAAE,KAAKX,KAAL,CAAWK,IAAX,IAAmB,EAH5B;AAIE,UAAA,QAAQ,EAAE,KAAKI;AAJjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,gCACE;AAAI,UAAA,SAAS,EAAEb,GAAG,CAACkC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE,KAAKR,YAAvB;AAAqC,UAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWE;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,WAAD;AACE,UAAA,QAAQ,EAAEsB,aADZ;AAEE,UAAA,WAAW,EAAE,KAAKL;AAFpB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AA/EgC","sourcesContent":["import { nanoid } from 'nanoid';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport css from './App.module.css';\nconst { Component } = require('react');\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { number, name } = this.state;\n    const repeatName = this.state.contacts.find(item => {\n      return item.name === name;\n    });\n    if (repeatName) {\n      alert(`${name} is already in your contacts!`);\n      this.reset();\n      return;\n    } else {\n      const newContact = { id: nanoid(), name, number };\n      this.setState(() => {\n        return { contacts: [...this.state.contacts, newContact] };\n      });\n    }\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  onBtnDelete = e => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(\n          contact => contact.id !== e.target.id\n        ),\n      };\n    });\n  };\n\n  handleFilter = e => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  render() {\n    const { contacts } = this.state;\n    const filterContact = contacts.filter(contact =>\n      contact.name\n        .toLowerCase()\n        .trim()\n        .includes(this.state.filter.toLowerCase())\n    );\n\n    return (\n      <div>\n        <div action=\"\" className={css.phonebook}>\n          <h1 className={css.phonebookTitle}>Phonebook</h1>\n          <ContactForm\n            onChange={this.handleChange}\n            valueNumber={this.state.number}\n            value={this.state.name || ''}\n            onSubmit={this.handleSubmit}\n          />\n        </div>\n        <div>\n          <h1 className={css.contactTitle}>Contacts</h1>\n          <Filter onChange={this.handleFilter} value={this.state.filter} />\n          <ContactList\n            contacts={filterContact}\n            onBtnDelete={this.onBtnDelete}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}