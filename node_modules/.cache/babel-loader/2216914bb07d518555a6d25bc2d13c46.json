{"ast":null,"code":"var _jsxFileName = \"/home/viktoriia/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438/GitHub/goit-react-hw-02-phonebook/src/components/App.jsx\";\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  Component\n} = require('react');\n\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      name: ''\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        number,\n        name\n      } = this.state;\n      const newContact = {\n        id: nanoid(),\n        name,\n        number\n      };\n      this.setState(() => {\n        return {\n          contacts: [...this.state.contacts, newContact]\n        };\n      });\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      contacts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        action: \"\",\n        className: \"phonebook\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"phonebookTitle\",\n          children: \"Phonebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"phonebook\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            type: \"text\",\n            className: \"username\",\n            name: \"name\",\n            value: this.state.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            type: \"tel\",\n            name: \"number\",\n            value: this.state.number,\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"addContact\",\n            children: \"Add contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"contactTitle\",\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Find contacts by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"contactList\",\n          children: [console.log(contacts), contacts.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"contactItem\",\n              children: [item.name, \" \", item.number]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/viktoriia/Документи/GitHub/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["nanoid","Component","require","App","state","contacts","name","handleChange","e","value","target","setState","handleSubmit","preventDefault","number","newContact","id","reset","render","console","log","map","item"],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid';\nconst { Component } = require('react');\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { number, name } = this.state;\n    const newContact = { id: nanoid(), name, number };\n\n    this.setState(() => {\n      return { contacts: [...this.state.contacts, newContact] };\n    });\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <div>\n        <div action=\"\" className=\"phonebook\">\n          <h1 className=\"phonebookTitle\">Phonebook</h1>\n          <form onSubmit={this.handleSubmit} className=\"phonebook\">\n            <label htmlFor=\"\">Name</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              className=\"username\"\n              name=\"name\"\n              value={this.state.name}\n            />\n            <label htmlFor=\"\">Number</label>\n            <input\n              onChange={this.handleChange}\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n            <button className=\"addContact\">Add contact</button>\n          </form>\n        </div>\n        <div>\n          <h1 className=\"contactTitle\">Contacts</h1>\n          <label htmlFor=\"\">Find contacts by name</label>\n          <input type=\"text\" className=\"username\" />\n          <ul className=\"contactList\">\n            {/* {console.log(this.state.contacts)} */}\n            {console.log(contacts)}\n            {contacts.map(item => (\n              <>\n                <li className=\"contactItem\" key={item.id}>\n                  {item.name} {item.number}\n                </li>\n              </>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}