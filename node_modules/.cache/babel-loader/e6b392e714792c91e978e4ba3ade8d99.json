{"ast":null,"code":"var _jsxFileName = \"/home/viktoriia/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438/GitHub/goit-react-hw-02-phonebook/src/components/App.jsx\";\nimport { nanoid } from 'nanoid';\nimport { Filter } from './Filter/Filter';\nimport { ContactList } from './ContactList/ContactList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  Component\n} = require('react');\n\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      name: ''\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        number,\n        name\n      } = this.state;\n      const repeatName = this.state.contacts.find(item => {\n        return item.name === name;\n      });\n\n      if (repeatName) {\n        alert(`${name} is already in your contacts!`);\n        this.reset();\n        return;\n      } else {\n        const newContact = {\n          id: nanoid(),\n          name,\n          number\n        };\n        this.setState(() => {\n          return {\n            contacts: [...this.state.contacts, newContact]\n          };\n        });\n      }\n\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n\n    this.handleFilterChange = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        filter: value\n      });\n    };\n  }\n\n  // deleteContact = e => {\n  //   this.setState(prevState => {\n  //     return {\n  //       contacts: prevState.contacts.filter(\n  //         contact => contact.id !== e.target.id\n  //       ),\n  //     };\n  //   });\n  // };\n  render() {\n    const {\n      contacts\n    } = this.state; // const filterContacts = contacts.filter(contact =>\n    //   contact.name\n    //     .toLowerCase()\n    //     .trim()\n    //     .includes(this.state.filter.toLowerCase())\n    // );\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        action: \"\",\n        className: \"phonebook\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"phonebookTitle\",\n          children: \"Phonebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"phonebook\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handleChange,\n              type: \"text\",\n              className: \"username\",\n              name: \"name\",\n              value: this.state.name,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handleChange,\n              type: \"tel\",\n              name: \"number\",\n              value: this.state.number,\n              pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n              title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"addContact\",\n            children: \"Add contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Filter // value={this.state.filter}\n        // onChange={this.handleFilterChange}\n        , {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/viktoriia/Документи/GitHub/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["nanoid","Filter","ContactList","Component","require","App","state","contacts","name","handleChange","e","value","target","setState","handleSubmit","preventDefault","number","repeatName","find","item","alert","reset","newContact","id","handleFilterChange","filter","render"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAgBC,OAAO,CAAC,OAAD,CAA7B;;AAEA,OAAO,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCG,KADiC,GACzB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE;AAFA,KADyB;;AAAA,SAMjCC,YANiC,GAMlBC,CAAC,IAAI;AAClB,YAAM;AAAEF,QAAAA,IAAF;AAAQG,QAAAA;AAAR,UAAkBD,CAAC,CAACE,MAA1B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACL,IAAD,GAAQG;AAAV,OAAd;AACD,KATgC;;AAAA,SAWjCG,YAXiC,GAWlBJ,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACK,cAAF;AACA,YAAM;AAAEC,QAAAA,MAAF;AAAUR,QAAAA;AAAV,UAAmB,KAAKF,KAA9B;AACA,YAAMW,UAAU,GAAG,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,IAApB,CAAyBC,IAAI,IAAI;AAClD,eAAOA,IAAI,CAACX,IAAL,KAAcA,IAArB;AACD,OAFkB,CAAnB;;AAGA,UAAIS,UAAJ,EAAgB;AACdG,QAAAA,KAAK,CAAE,GAAEZ,IAAK,+BAAT,CAAL;AACA,aAAKa,KAAL;AACA;AACD,OAJD,MAIO;AACL,cAAMC,UAAU,GAAG;AAAEC,UAAAA,EAAE,EAAEvB,MAAM,EAAZ;AAAgBQ,UAAAA,IAAhB;AAAsBQ,UAAAA;AAAtB,SAAnB;AACA,aAAKH,QAAL,CAAc,MAAM;AAClB,iBAAO;AAAEN,YAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,EAAyBe,UAAzB;AAAZ,WAAP;AACD,SAFD;AAGD;;AACD,WAAKD,KAAL;AACD,KA5BgC;;AAAA,SA8BjCA,KA9BiC,GA8BzB,MAAM;AACZ,WAAKR,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAE,EAAR;AAAYQ,QAAAA,MAAM,EAAE;AAApB,OAAd;AACD,KAhCgC;;AAAA,SAkCjCQ,kBAlCiC,GAkCZd,CAAC,IAAI;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAYD,CAAC,CAACE,MAApB;AACA,WAAKC,QAAL,CAAc;AAAEY,QAAAA,MAAM,EAAEd;AAAV,OAAd;AACD,KArCgC;AAAA;;AAuCjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA;AAAF,QAAe,KAAKD,KAA1B,CADO,CAEP;AACA;AACA;AACA;AACA;AACA;;AACA,wBACE;AAAA,8BACE;AAAK,QAAA,MAAM,EAAC,EAAZ;AAAe,QAAA,SAAS,EAAC,WAAzB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,QAAQ,EAAE,KAAKQ,YAArB;AAAmC,UAAA,SAAS,EAAC,WAA7C;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,EAAf;AAAA,4CAEE;AACE,cAAA,QAAQ,EAAE,KAAKL,YADjB;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,SAAS,EAAC,UAHZ;AAIE,cAAA,IAAI,EAAC,MAJP;AAKE,cAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,IALpB;AAME,cAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAO,YAAA,OAAO,EAAC,EAAf;AAAA,8CAEE;AACE,cAAA,QAAQ,EAAE,KAAKC,YADjB;AAEE,cAAA,IAAI,EAAC,KAFP;AAGE,cAAA,IAAI,EAAC,QAHP;AAIE,cAAA,KAAK,EAAE,KAAKH,KAAL,CAAWU,MAJpB;AAKE,cAAA,OAAO,EAAC,wFALV;AAME,cAAA,KAAK,EAAC,8FANR;AAOE,cAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAwBE;AAAQ,YAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA8BE;AAAA,gCACE,QAAC,MAAD,CACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwCD;;AAjGgC","sourcesContent":["import { nanoid } from 'nanoid';\nimport { Filter } from './Filter/Filter';\nimport { ContactList } from './ContactList/ContactList';\nconst { Component } = require('react');\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { number, name } = this.state;\n    const repeatName = this.state.contacts.find(item => {\n      return item.name === name;\n    });\n    if (repeatName) {\n      alert(`${name} is already in your contacts!`);\n      this.reset();\n      return;\n    } else {\n      const newContact = { id: nanoid(), name, number };\n      this.setState(() => {\n        return { contacts: [...this.state.contacts, newContact] };\n      });\n    }\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  handleFilterChange = e => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  // deleteContact = e => {\n  //   this.setState(prevState => {\n  //     return {\n  //       contacts: prevState.contacts.filter(\n  //         contact => contact.id !== e.target.id\n  //       ),\n  //     };\n  //   });\n  // };\n\n  render() {\n    const { contacts } = this.state;\n    // const filterContacts = contacts.filter(contact =>\n    //   contact.name\n    //     .toLowerCase()\n    //     .trim()\n    //     .includes(this.state.filter.toLowerCase())\n    // );\n    return (\n      <div>\n        <div action=\"\" className=\"phonebook\">\n          <h1 className=\"phonebookTitle\">Phonebook</h1>\n          <form onSubmit={this.handleSubmit} className=\"phonebook\">\n            <label htmlFor=\"\">\n              Name\n              <input\n                onChange={this.handleChange}\n                type=\"text\"\n                className=\"username\"\n                name=\"name\"\n                value={this.state.name}\n                required\n              />\n            </label>\n            <label htmlFor=\"\">\n              Number\n              <input\n                onChange={this.handleChange}\n                type=\"tel\"\n                name=\"number\"\n                value={this.state.number}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n              />\n            </label>\n            <button className=\"addContact\">Add contact</button>\n          </form>\n        </div>\n        <div>\n          <Filter\n          // value={this.state.filter}\n          // onChange={this.handleFilterChange}\n          />\n          <ContactList />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}