{"ast":null,"code":"var _jsxFileName = \"/home/viktoriia/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438/GitHub/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx\";\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport css from './ContactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      name: ''\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      console.log(this.props);\n      e.preventDefault();\n      this.props.onSubmit(this.state);\n      console.log(this.props);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: css.phonebook,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: css.name,\n        htmlFor: \"\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          type: \"text\",\n          className: css.userName,\n          name: \"name\",\n          value: this.state.name || '',\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: css.number,\n        htmlFor: \"\",\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          type: \"tel\",\n          className: css.userNumber,\n          name: \"number\",\n          value: this.state.number,\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: css.addContact,\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nContactForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  valueNumber: PropTypes.string,\n  value: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/viktoriia/Документи/GitHub/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["PropTypes","Component","css","ContactForm","state","contacts","name","handleChange","e","value","target","setState","handleSubmit","console","log","props","preventDefault","onSubmit","reset","number","render","phonebook","userName","userNumber","addContact","propTypes","onChange","func","isRequired","valueNumber","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,GAAP,MAAgB,0BAAhB;;AAEA,OAAO,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEzCG,KAFyC,GAEjC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE;AAFA,KAFiC;;AAAA,SAOzCC,YAPyC,GAO1BC,CAAC,IAAI;AAClB,YAAM;AAAEF,QAAAA,IAAF;AAAQG,QAAAA;AAAR,UAAkBD,CAAC,CAACE,MAA1B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACL,IAAD,GAAQG;AAAV,OAAd;AACD,KAVwC;;AAAA,SAYzCG,YAZyC,GAY1BJ,CAAC,IAAI;AAClBK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAEAP,MAAAA,CAAC,CAACQ,cAAF;AACA,WAAKD,KAAL,CAAWE,QAAX,CAAoB,KAAKb,KAAzB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WAAKG,KAAL;AACD,KAnBwC;;AAAA,SAqBzCA,KArByC,GAqBjC,MAAM;AACZ,WAAKP,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAE,EAAR;AAAYa,QAAAA,MAAM,EAAE;AAApB,OAAd;AACD,KAvBwC;AAAA;;AAyBzCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKR,YAArB;AAAmC,MAAA,SAAS,EAAEV,GAAG,CAACmB,SAAlD;AAAA,8BACE;AAAO,QAAA,SAAS,EAAEnB,GAAG,CAACI,IAAtB;AAA4B,QAAA,OAAO,EAAC,EAApC;AAAA,wCAEE;AACE,UAAA,QAAQ,EAAE,KAAKC,YADjB;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,SAAS,EAAEL,GAAG,CAACoB,QAHjB;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWE,IAAX,IAAmB,EAL5B;AAME,UAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAO,QAAA,SAAS,EAAEJ,GAAG,CAACiB,MAAtB;AAA8B,QAAA,OAAO,EAAC,EAAtC;AAAA,0CAEE;AACE,UAAA,QAAQ,EAAE,KAAKZ,YADjB;AAEE,UAAA,IAAI,EAAC,KAFP;AAGE,UAAA,SAAS,EAAEL,GAAG,CAACqB,UAHjB;AAIE,UAAA,IAAI,EAAC,QAJP;AAKE,UAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWe,MALpB;AAME,UAAA,OAAO,EAAC,wFANV;AAOE,UAAA,KAAK,EAAC,8FAPR;AAQE,UAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAyBE;AAAQ,QAAA,SAAS,EAAEjB,GAAG,CAACsB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AAvDwC;AA0D3CrB,WAAW,CAACsB,SAAZ,GAAwB;AACtBC,EAAAA,QAAQ,EAAE1B,SAAS,CAAC2B,IAAV,CAAeC,UADH;AAEtBX,EAAAA,QAAQ,EAAEjB,SAAS,CAAC2B,IAAV,CAAeC,UAFH;AAGtBC,EAAAA,WAAW,EAAE7B,SAAS,CAAC8B,MAHD;AAItBrB,EAAAA,KAAK,EAAET,SAAS,CAAC8B,MAAV,CAAiBF;AAJF,CAAxB","sourcesContent":["import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport css from './ContactForm.module.css';\n\nexport class ContactForm extends Component {\n  // ({ valueNumber, value })\n  state = {\n    contacts: [],\n    name: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    console.log(this.props);\n\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    console.log(this.props);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={css.phonebook}>\n        <label className={css.name} htmlFor=\"\">\n          Name\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            className={css.userName}\n            name=\"name\"\n            value={this.state.name || ''}\n            required\n          />\n        </label>\n        <label className={css.number} htmlFor=\"\">\n          Number\n          <input\n            onChange={this.handleChange}\n            type=\"tel\"\n            className={css.userNumber}\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={css.addContact}>Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  valueNumber: PropTypes.string,\n  value: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}